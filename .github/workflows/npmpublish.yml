name: Test and Publish

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm 9.15.2
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Config npm secret token
        run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

      - name: Installing FluentÂ´s Dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: export NPM_TOKEN=${{ secrets.GOATLAB_NPM_TOKEN }} && pnpm i

      - name: Write key file
        env:
          AUTH: ${{ secrets.FLUENT_SERVICE_ACCOUNT_BASE64 }}
        run: |
          echo "$AUTH" | base64 --decode > /home/runner/work/fluent/fluent/fluent-service-account.json

      - name: Building Fluent
        run: export NPM_TOKEN=${{ secrets.GOATLAB_NPM_TOKEN }} && pnpm build

      - name: Testing Fluent
        run: export NPM_TOKEN=${{ secrets.GOATLAB_NPM_TOKEN }} && pnpm test

      - name: Publish to NPM
        run: export NPM_TOKEN=${{ secrets.GOATLAB_NPM_TOKEN }} && npm publish
