name: Release from Github
on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type'
        required: true
        default: 'patch'
jobs:
  release-dev:
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Add env Variables
        run: echo "${{secrets.DEV_ENV_BASE64}}" | base64 --decode > ./.env

      - name: Install dependencies
        run: npm install

      - name: Unit tests
        run: npm run test

      - name: Zip frontend build
        run: zip -r sii-parser.zip "./build"

      - name: RUN release process
        run: |
          git config --global user.email "ignacio.cabrera@goatlab.io"
          git config --global user.name "cabrerabywaters"
          npm run release:${{ github.event.inputs.releaseType }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  release-prod:
    needs: release-dev
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull latests
        run: |
          git pull origin main

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Add env Variables
        run: echo "${{secrets.PROD_ENV_BASE64}}" | base64 --decode > ./.env

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run compile

      - name: Zip frontend build
        run: zip -r sii-scrapper.zip "./build"

      - name: Upload Staging Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          file: ./sii-scrapper.zip
          asset_name: sii-scrapper.zip
          tag: ${{ steps.package-version.outputs.current-version}}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
